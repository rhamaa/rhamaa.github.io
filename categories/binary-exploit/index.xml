<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Binary Exploit on /home/rhama/</title>
    <link>rhamaa.github.io/categories/binary-exploit/</link>
    <description>Recent content in Binary Exploit on /home/rhama/</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="rhamaa.github.io/categories/binary-exploit/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pwnable.tw - Start (100)</title>
      <link>rhamaa.github.io/post/2017-11-06-pwnabletw-start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>rhamaa.github.io/post/2017-11-06-pwnabletw-start/</guid>
      <description>Diberikan sebuah binary bernama start, yang vulnerable buffer overflow, karena buffer inputan lebih besar dari buffer variable penampung.
Berikut informasi binary start.
Hasil disassembly menggunaan Binary Ninja pada fungsi _start Diketahui bahwa binary start ditulis menggunakan asm x86 dan menggunakan 3 syscall yaitu write, read dan exit. Referensi tentang syscall dapat dilihat disiniPada bagian warna biru adalah proses pemanggilan syscall write dan bagian warna merah adalah pemanggilan syscall read . Lalu bagian kuning paling bawah adalah prospes stack akan di naikan sebanyak 20 bytes, sehingga Top Of Stack nya adalah alamat dari fungsi _exit dan program akan loncat ke fungsi _exit untuk mengakhiri eksekusi.</description>
    </item>
    
  </channel>
</rss>